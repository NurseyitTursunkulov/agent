import os
from dotenv import load_dotenv
from langchain_openai import ChatOpenAI
from langchain.agents import create_openai_functions_agent, AgentExecutor
from langchain.prompts import ChatPromptTemplate, MessagesPlaceholder
from langchain.tools import tool
from langchain.schema import SystemMessage, HumanMessage

load_dotenv()

# ü§ñ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
@tool
def get_listings() -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–≤–∞—Ä—Ç–∏—Ä –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞."""
    return """
1. Ruhige Wohnung in K√∂ln
–¶–µ–Ω–∞: 800‚Ç¨
–û–ø–∏—Å–∞–Ω–∏–µ: Ruhige Lage mit Balkon. 2 Zimmer. N√§he Park.

2. Lautes Loft im Zentrum
–¶–µ–Ω–∞: 950‚Ç¨
–û–ø–∏—Å–∞–Ω–∏–µ: Offenes Loft mitten in der Innenstadt. Sehr laut.

3. Familienwohnung in ruhiger Gegend
–¶–µ–Ω–∞: 880‚Ç¨
–û–ø–∏—Å–∞–Ω–∏–µ: 3 Zimmer. Ruhige Lage. Keine Haustiere erlaubt.
"""

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ LLM
llm = ChatOpenAI(model="gpt-4", temperature=0)

# üéØ Prompt —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π agent_scratchpad
prompt = ChatPromptTemplate.from_messages([
    SystemMessage(content="–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–æ–∏—Å–∫—É –∫–≤–∞—Ä—Ç–∏—Ä."),
    HumanMessage(content="{input}"),
    MessagesPlaceholder(variable_name="agent_scratchpad")
])

# ‚öôÔ∏è –ê–≥–µ–Ω—Ç
agent = create_openai_functions_agent(
    llm=llm,
    tools=[get_listings],
    prompt=prompt
)

agent_executor = AgentExecutor(
    agent=agent,
    tools=[get_listings],
    verbose=True
)

# üöÄ –í–≤–æ–¥
user_input = "–ü–æ–∫–∞–∂–∏ –º–Ω–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ —Ç–∏—Ö–æ–º —Ä–∞–π–æ–Ω–µ –¥–æ 900 –µ–≤—Ä–æ —Å –º–∏–Ω–∏–º—É–º 2 –∫–æ–º–Ω–∞—Ç–∞–º–∏"

# ‚úÖ –ó–∞–ø—É—Å–∫
result = agent_executor.invoke({"input": user_input})

print("\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
print(result["output"])
