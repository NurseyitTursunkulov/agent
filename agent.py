from langchain.agents import AgentExecutor, create_openai_functions_agent
from langchain.tools import tool
from langchain_core.messages import SystemMessage, HumanMessage
from langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder
from langchain_openai import ChatOpenAI
from dotenv import load_dotenv
import os

from kleinanzeigen_parser import search_kleinanzeigen

load_dotenv()


# üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
@tool
def get_listings(input_text: str) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–≤–∞—Ä—Ç–∏—Ä —Å Kleinanzeigen –≤ –≤–∏–¥–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞."""
    listings = search_kleinanzeigen()
    if not listings:
        return "–û–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."

    result = []
    for i, ad in enumerate(listings, 1):
        result.append(f"""{i}. {ad['title']}
–¶–µ–Ω–∞: {ad['price']}
–û–ø–∏—Å–∞–Ω–∏–µ: {ad['description']}
–°—Å—ã–ª–∫–∞: {ad['url']}
""")
    return "\n\n".join(result)


# ü§ñ Prompt —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π agent_scratchpad
prompt = ChatPromptTemplate.from_messages([
    SystemMessage(
        content="–¢—ã –∞–≥–µ–Ω—Ç –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏. "
                "–¢—ã —É–º–µ–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç `get_listings`, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π. "
                "–ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å, –∫–∞–∫–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∑–∞–ø—Ä–æ—Å—É, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–∑–æ–≤–∏ `get_listings`, "
                "–∞ –∑–∞—Ç–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä—É–π –∏—Ö –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
    ),
    HumanMessage(content="{input}"),
    MessagesPlaceholder(variable_name="agent_scratchpad"),
])

# ü§ñ –ú–æ–¥–µ–ª—å
llm = ChatOpenAI(model="gpt-4", temperature=0)

# üß† –ê–≥–µ–Ω—Ç
agent = create_openai_functions_agent(llm=llm, tools=[get_listings], prompt=prompt)

# üõ†Ô∏è Executor
executor = AgentExecutor(agent=agent, tools=[get_listings], verbose=True)

# üöÄ –ó–∞–ø—Ä–æ—Å
query = """
–ü–æ–∫–∞–∂–∏ –º–Ω–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã: —Ç–∏—Ö–∏–π —Ä–∞–π–æ–Ω, —Ü–µ–Ω–∞ –¥–æ 900‚Ç¨, –º–∏–Ω–∏–º—É–º 2 –∫–æ–º–Ω–∞—Ç—ã.
–°–∫–∞–∂–∏, –∫–∞–∫–∏–µ –ø–æ–¥—Ö–æ–¥—è—Ç, –∏ –ø–æ—á–µ–º—É.
"""

result = executor.invoke({"input": query})

print("\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
print(result["output"])
